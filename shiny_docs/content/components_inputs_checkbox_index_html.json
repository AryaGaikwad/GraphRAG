{
  "metadata": {
    "title": "Checkbox – Shiny for Python",
    "description": "",
    "url": "components/inputs/checkbox/index.html"
  },
  "content": [
    {
      "type": "ol",
      "items": [
        "Inputs",
        "Checkbox"
      ]
    },
    {
      "type": "h1",
      "text": "Checkbox"
    },
    {
      "type": "code",
      "text": "#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| components: [viewer]\n#| viewerHeight: 150\n\n## file: app.py\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.row(\n        ui.column(\n            6,\n            ui.input_checkbox(\"checkbox\", \"Checkbox\", True).add_class(\n                \"mb-0 text-center\"\n            ),\n        ),\n        ui.column(6, ui.output_ui(\"value\").add_class(\"mb-0 text-center\")),\n        {\"class\": \"vh-100 justify-content-center align-items-center px-5\"},\n    )\n)\n\ndef server(input, output, session):\n    @render.ui\n    def value():\n        return input.checkbox()\n\napp = App(app_ui, server)"
    },
    {
      "type": "ul",
      "items": [
        "Express",
        "Core"
      ]
    },
    {
      "type": "code",
      "text": "from shiny.express import input, render, ui\n\nui.input_checkbox(\"checkbox\", \"Checkbox\", False)  \n\n@render.ui\ndef value():\n    return input.checkbox()"
    },
    {
      "type": "code",
      "text": "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_checkbox(\"checkbox\", \"Checkbox\", False),  \n    ui.output_ui(\"value\"),\n)\n\ndef server(input, output, session):\n    @render.ui\n    def value():\n        return input.checkbox()\n\napp = App(app_ui, server)"
    },
    {
      "type": "h2",
      "text": "Relevant Functions"
    },
    {
      "type": "ul",
      "items": [
        "ui.input_checkbox() ui.input_checkbox(id, label, value=False, *, width=None)"
      ]
    },
    {
      "type": "p",
      "text": "ui.input_checkbox() ui.input_checkbox(id, label, value=False, *, width=None)"
    },
    {
      "type": "h2",
      "text": "Details"
    },
    {
      "type": "p",
      "text": "A checkbox creates a single checkbox that can be used to specify logical values."
    },
    {
      "type": "p",
      "text": "Follow these steps to add a checkbox to your app:"
    },
    {
      "type": "ol",
      "items": [
        "Add ui.input_checkbox() to the UI of your app to create a checkbox. Where you call this function will determine where the checkbox will appear within the app’s layout.",
        "Supply values to ui.input_checkbox()’s first two parameters (id and label) to specify the id and label of the checkbox. Optionally, set the value argument to either True or False to specify the initial value of the checkbox. By default, the checkbox has value False and is un-checked."
      ]
    },
    {
      "type": "p",
      "text": "Add ui.input_checkbox() to the UI of your app to create a checkbox. Where you call this function will determine where the checkbox will appear within the app’s layout."
    },
    {
      "type": "p",
      "text": "Supply values to ui.input_checkbox()’s first two parameters (id and label) to specify the id and label of the checkbox. Optionally, set the value argument to either True or False to specify the initial value of the checkbox. By default, the checkbox has value False and is un-checked."
    },
    {
      "type": "p",
      "text": "The value of an input component is accessible as a reactive value within the server() function. To access the value of a checkbox:"
    },
    {
      "type": "ol",
      "items": [
        "Use input.<checkbox_id>() (e.g., input.checkbox()) to access the value of a checkbox. The server value of a checkbox is True if checked and False if not checked."
      ]
    },
    {
      "type": "p",
      "text": "See also: Checkbox Group(Checkbox"
    }
  ],
  "code_examples": [
    "#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| components: [viewer]\n#| viewerHeight: 150\n\n## file: app.py\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.row(\n        ui.column(\n            6,\n            ui.input_checkbox(\"checkbox\", \"Checkbox\", True).add_class(\n                \"mb-0 text-center\"\n            ),\n        ),\n        ui.column(6, ui.output_ui(\"value\").add_class(\"mb-0 text-center\")),\n        {\"class\": \"vh-100 justify-content-center align-items-center px-5\"},\n    )\n)\n\ndef server(input, output, session):\n    @render.ui\n    def value():\n        return input.checkbox()\n\napp = App(app_ui, server)",
    "#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| components: [viewer]\n#| viewerHeight: 150\n\n## file: app.py\nfrom shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.row(\n        ui.column(\n            6,\n            ui.input_checkbox(\"checkbox\", \"Checkbox\", True).add_class(\n                \"mb-0 text-center\"\n            ),\n        ),\n        ui.column(6, ui.output_ui(\"value\").add_class(\"mb-0 text-center\")),\n        {\"class\": \"vh-100 justify-content-center align-items-center px-5\"},\n    )\n)\n\ndef server(input, output, session):\n    @render.ui\n    def value():\n        return input.checkbox()\n\napp = App(app_ui, server)",
    "from shiny.express import input, render, ui\n\nui.input_checkbox(\"checkbox\", \"Checkbox\", False)  \n\n@render.ui\ndef value():\n    return input.checkbox()",
    "from shiny.express import input, render, ui\n\nui.input_checkbox(\"checkbox\", \"Checkbox\", False)  \n\n@render.ui\ndef value():\n    return input.checkbox()",
    "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_checkbox(\"checkbox\", \"Checkbox\", False),  \n    ui.output_ui(\"value\"),\n)\n\ndef server(input, output, session):\n    @render.ui\n    def value():\n        return input.checkbox()\n\napp = App(app_ui, server)",
    "from shiny import App, render, ui\n\napp_ui = ui.page_fluid(\n    ui.input_checkbox(\"checkbox\", \"Checkbox\", False),  \n    ui.output_ui(\"value\"),\n)\n\ndef server(input, output, session):\n    @render.ui\n    def value():\n        return input.checkbox()\n\napp = App(app_ui, server)"
  ],
  "toc": [
    {
      "title": "COMPONENTS",
      "url": "components/"
    },
    {
      "title": "Inputs"
    },
    {
      "title": "Action Button",
      "url": "components/inputs/action-button/index.html"
    },
    {
      "title": "Action Link",
      "url": "components/inputs/action-link/index.html"
    },
    {
      "title": "Checkbox",
      "url": "components/inputs/checkbox/index.html"
    },
    {
      "title": "Checkbox Group",
      "url": "components/inputs/checkbox-group/index.html"
    },
    {
      "title": "Date Range Selector",
      "url": "components/inputs/date-range-selector/index.html"
    },
    {
      "title": "Date Selector",
      "url": "components/inputs/date-selector/index.html"
    },
    {
      "title": "File Input",
      "url": "components/inputs/file/index.html"
    },
    {
      "title": "Numeric Input",
      "url": "components/inputs/numeric-input/index.html"
    },
    {
      "title": "Password Field",
      "url": "components/inputs/password-field/index.html"
    },
    {
      "title": "Radio Buttons",
      "url": "components/inputs/radio-buttons/index.html"
    },
    {
      "title": "Select (Single)",
      "url": "components/inputs/select-single/index.html"
    },
    {
      "title": "Select (Multiple)",
      "url": "components/inputs/select-multiple/index.html"
    },
    {
      "title": "Selectize (Single)",
      "url": "components/inputs/selectize-single/index.html"
    },
    {
      "title": "Selectize (Multiple)",
      "url": "components/inputs/selectize-multiple/index.html"
    },
    {
      "title": "Slider",
      "url": "components/inputs/slider/index.html"
    },
    {
      "title": "Slider Range",
      "url": "components/inputs/slider-range/index.html"
    },
    {
      "title": "Switch",
      "url": "components/inputs/switch/index.html"
    },
    {
      "title": "Text Area",
      "url": "components/inputs/text-area/index.html"
    },
    {
      "title": "Text Box",
      "url": "components/inputs/text-box/index.html"
    },
    {
      "title": "Outputs"
    },
    {
      "title": "Data Grid",
      "url": "components/outputs/data-grid/index.html"
    },
    {
      "title": "Data Table",
      "url": "components/outputs/data-table/index.html"
    },
    {
      "title": "Image",
      "url": "components/outputs/image/index.html"
    },
    {
      "title": "Map (ipyleaflet)",
      "url": "components/outputs/map-ipyleaflet/index.html"
    },
    {
      "title": "Plot (Matplotlib)",
      "url": "components/outputs/plot-matplotlib/index.html"
    },
    {
      "title": "Plot (Plotly)",
      "url": "components/outputs/plot-plotly/index.html"
    },
    {
      "title": "Plot (Seaborn)",
      "url": "components/outputs/plot-seaborn/index.html"
    },
    {
      "title": "Text",
      "url": "components/outputs/text/index.html"
    },
    {
      "title": "UI",
      "url": "components/outputs/ui/index.html"
    },
    {
      "title": "Value Box",
      "url": "components/outputs/value-box/index.html"
    },
    {
      "title": "Verbatim Text",
      "url": "components/outputs/verbatim-text/index.html"
    },
    {
      "title": "Display Messages"
    },
    {
      "title": "Chat",
      "url": "components/display-messages/chat/index.html"
    },
    {
      "title": "Modal",
      "url": "components/display-messages/modal/index.html"
    },
    {
      "title": "Notifications",
      "url": "components/display-messages/notifications/index.html"
    },
    {
      "title": "Progress Bar",
      "url": "components/display-messages/progress-bar/index.html"
    },
    {
      "title": "Tooltips",
      "url": "components/display-messages/tooltips/index.html"
    }
  ]
}